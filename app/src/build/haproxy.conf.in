global
  log 127.0.0.1 local0 info
  maxconn  ${haproxy-conf:maxconn}
  daemon
  nbproc 1

defaults
  mode http
  option httpclose
  # logging options
  log global
  option httplog
  option log-separate-errors
  # Remove requests from the queue if people press stop button
  retries 3
  # If a client is bound to a particular backend but it goes down,
  # send them to a different one
  option redispatch
  monitor-uri /haproxy-ping

  timeout connect 7s
  timeout queue   300s
  timeout client  600s
  timeout server  600s

  # Enable status page at this URL, on the port HAProxy is bound to
  stats enable
  stats uri /haproxy-status
  stats refresh 5s
  stats realm Haproxy\ statistics

frontend zopecluster
  bind ${haproxy-conf:bind}
  default_backend zope

# Load balancing over the zope instances
backend zope
  # To avoid side-effects of using cookies for sticky sessions, we will
  # simply use the X-Forwarded-For header IP address (cookies confuse
  # cacheability of request by Varnish):
  balance hdr(x-forwarded-for) 
  # Use / (the default) for periodic backend health checks
  option httpchk

  # Default server options:
  # "maxconn" is how many connections can be sent to the server at once
  # "inter" is normal check interval for each server
  # "downinter" is check interval for server marked down
  # "fastinter" is check interval for a server in transition between up/down
  # "rise 3" means consider Zope up after 3 successful health checks
  # "fall 2" means consider Zope instance down after two failed health checks
  # "on-error mark-down error-limit 5" means after 5 connection errors,
  #     immediately mark node as down and enter fastinter state for checks.

  default-server maxconn 5 inter 5000 downinter 2000 fastinter 1000 rise 3 fall 2 on-error mark-down error-limit 5

  # Server options:
  # "cookie" sets the value of the serverid cookie to be used for the server
  # "check" enables health checks

  server  plone0101 ${instance:http-address} cookie p0101 check
  server  plone0102 ${instance2:http-address} cookie p0102 check
  server  plone0103 ${instance3:http-address} cookie p0103 check
  server  plone0104 ${instance4:http-address} cookie p0104 check

